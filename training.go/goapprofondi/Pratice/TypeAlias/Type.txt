package main

import "fmt"

// type alias
type ErrorCode int

// definissions des differentes constantes
/*
Alignement de constante:
const ERR_CODE_OK = 0
const ERR_CODE_NOT_FOUND = 1
const ERR_CODE_DUPLICATE = 2
const ERR_CODE_LOCKED = 3
// Groupement de constante
const(
	ERR_CODE_OK = 0
	ERR_CODE_NOT_FOUND = 1
	ERR_CODE_DUPLICATE = 2
	ERR_CODE_LOCKED = 3
)

// Groupement de constante
// iota c'est un mot cle de go qui va incrementer la valeur suvante de 1
// en commencant par 0
const (
	ERR_CODE_OK  ErrorCode = iota // 0
	ERR_CODE_NOT_FOUND // 1
	ERR_CODE_LOCKED   // 2
)
*/

// Groupement de constante
// iota c'est un mot cle de go qui va incrementer la valeur suvante de 1
// en commencant par 0 par default
// ERR_CODE_OK = iota + 1 // ici on le fait commencer par 1
const (
	ERR_CODE_OK ErrorCode = iota
	ERR_CODE_NOT_FOUND
	ERR_CODE_LOCKED
	ERR_CODE_GENERIC
)

// Determine if error code is critical
func (ec ErrorCode) IsCritical() bool {

	return ec == ERR_CODE_LOCKED || ec == ERR_CODE_NOT_FOUND
}

// Print error
func printErrCode(c ErrorCode) {
	fmt.Printf("code=%v, critical=%v\n", c, c.IsCritical())
}

// Entry point
func main() {

	code := ERR_CODE_OK
	printErrCode(code)
}
